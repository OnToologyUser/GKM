# baseURI: http://loop3d.org/GSO/ontology/2020/1/common/ontology

@prefix : <http://loop3d.org/GSO/ontology/2020/1/common/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Abstract_Endurant
  rdf:type owl:Class ;
  rdfs:comment "Abstract endurants do not occupy space nor time - they are aspatial and atemporal, e.g. numbers and other mathematical objects"@en ;
  rdfs:subClassOf :Notional_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :occupiesTime ;
          owl:someValuesFrom :Time_Region ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Abstract_Endurant ;
      owl:onProperty :hasPart ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Notional_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:complementOf [
                      rdf:type owl:Restriction ;
                      owl:onProperty :occupiesTime ;
                      owl:someValuesFrom :Time_Region ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Amount_Of_Matter
  rdf:type owl:Class ;
  rdfs:comment "Amounts of matter refer to volumes of substances such as some gold, wood, iron, water, air, etc.  As per Lowe (1998), an amount of matter is either a chunk (unified \"part\") or heap (seperated and not unified \"piece\"). A unified chunk of matter is an integral whole (with a unifying condition),  is mereologically invariant (can gain or lose parts without loss of identity), is discretely countable (the number of gold ore bodies or sandstone layers can be enumerated),  has a single self-connected boundary upon which it is mutually ontologically dependent (the chunk cannot exist essentuially without the boundary, and the boundary cannot exist essentially without the chunk), and is a single entity (self-conencted, unfragmented). Being an integral whole, a chunk of matter must then have some amount of matter as an essential part  (Brodaric et al. 2019). In contrast, a nonunified heap is mereologically variant, uncountable, and not dependent on a boundary, e.g. a heap of gold grains in an ore body or sand particles on a beach. Moreover, each unified chunk of matter is constituted by an ununified heap of matter, as well as possibly by particles of lower granularity, and can constitute larger amounts of matter or objects: e.g. an amount of mineral is a disaggreated heap of individual unit mineral cells made up by a certain configuration of atoms, and this heap of minerals makes up a single chunk of mineral locked together under binding conditions; the chunk in turn makes up a rock material, which makes up a formation. Note that both chunks and heaps can thus constitute objects: a gold ring is constituted by the chunk and its heap of gold, and a formation is constituted by both the sandstone and its heap of sand and other particles.  Even things that seem to be intrisically heaps, such as a dune, are constituted by both heaps and chunks of matter: e.g. by both a heap of sand particles and a chunk of sand (with a discrete shape and boundary). The chunk (of sand) differs from the object (the dune), in the sense that the dune has additional essential characteristics not held by the chunk, such as being a landform (i.e. located on the land surface), having a specific shape (hilly - even though the chunk has the shape, the shape is not essential to it, but is essential to the dune), and is formed by certain geomorphological processes such as wind or water flow (the sand chunk is formed by eroision and weathering). Distinguishing chunks from heaps is important to geology, as it enables chunks to have characteristics of unified matter, which otherwise would be restricted to objects, e.g. one could not then say, for example, some sandstone hosts a fault, but rather that the rock object part constituted by the sandstone hosts the fault. This then enables detailed representation of micro-scale geology, at the granularity of matter, in addition to representation of macro-scale entities such as units or basins."@en ;
  rdfs:subClassOf :Material_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Amount_Of_Matter ;
      owl:onProperty :hasConstituent ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Amount_Of_Matter ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Material_Endurant ;
      owl:onProperty :isConstituentOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasQuality ;
      owl:someValuesFrom :State_Of_Matter ;
    ] ;
  owl:disjointWith :Material_Object ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Material_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasQuality ;
                  owl:someValuesFrom :State_Of_Matter ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Constituent
  rdf:type owl:Class ;
  rdfs:comment "A part that is a constituent relation to a whole"@en ;
  rdfs:label "Constituent"@en ;
  rdfs:subClassOf :Part ;
.
:Dominant_Proportion
  rdf:type owl:Class ;
  rdfs:comment "Constituent is one of the most abundant."@en ;
  rdfs:comment "Example-- in a typical granite, Quartz, plagioclase, and K-feldspar are the dominant constituents."@en ;
  rdfs:label "Dominant Proportion"@en ;
  rdfs:subClassOf :Proportion_Value ;
.
:Duration
  rdf:type owl:Class ;
  rdfs:comment "The length of a time interval in some appropriate temporal reference system, e.g. 1 month or 10 Ma."@en ;
  rdfs:label "Duration "@en ;
  rdfs:subClassOf :Temporal_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasValue ;
      owl:someValuesFrom :Quality_Value ;
    ] ;
.
:Dynamic_Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature for which the host participates in some perdurant (wave) i.e. some aspect of the host changes over time"@en ;
  rdfs:label "Dynamic Feature"@en ;
  rdfs:subClassOf :Endurant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Perdurant ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Endurant_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hostedBy ;
                  owl:someValuesFrom :Perdurant ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Earth
  rdf:type :Material_Object ;
  rdf:type owl:NamedIndividual ;
  rdfs:comment "The Earth"@en ;
.
:Element
  rdf:type owl:Class ;
  rdfs:comment "a species of atom having the same number of protons in its atomic nuclei (that is, the same atomic number, or Z). https://en.wikipedia.org/wiki/Chemical_element"@en ;
  rdfs:label "Element"@en ;
  rdfs:subClassOf :Solid_Matter ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Element ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:intersectionOf [
              rdf:type rdf:List ;
              rdf:first :Material_Endurant ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Class ;
                      owl:complementOf :Element ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :isConstituentOf ;
    ] ;
.
:Endurant
  rdf:type owl:Class ;
  rdfs:comment "The main characteristic of endurants is that all of them are independent essential wholes. This does not mean that the corresponding property (being an endurant) carries proper unity, since there is no common unity criterion for endurants. Endurants can 'genuinely' change in time, in the sense that the very same endurant as a whole can have incompatible properties at different times. To see this, suppose that an endurant - say 'this paper' - has a property at a time t 'it's white', and a different, incompatible property at time t' 'it's yellow': in both cases we refer to the whole object, without picking up any particular part of it."@en ;
  rdfs:label "Endurant"@en ;
  rdfs:subClassOf :Particular ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Endurant ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Time_Region ;
      owl:onProperty :occupiesTimeIndirectly ;
    ] ;
  owl:disjointWith :Perdurant ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Nonphysical_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Physical_Endurant ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Endurant_Feature
  rdf:type owl:Class ;
  rdfs:comment "Feature constituted by a spatial or aspatial endurant."@en ;
  rdfs:label "Endurant Feature "@en ;
  rdfs:subClassOf :Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Endurant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Endurant ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Particular ;
    ] ;
  owl:disjointWith :Perdurant_Feature ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Endurant ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Endurant ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Event
  rdf:type owl:Class ;
  rdfs:comment "A event is an occurence that involves a change in state of some system.  \"Something that occurs in a certain place during a particular interval of time\" (https://www.dictionary.com/browse/event);  \"an occurrence; something that happens\" (https://wikidiff.com/event/process).  Event is dependent on at least one process"@en ;
  rdfs:label "Event"@en ;
  rdfs:subClassOf :Perdurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Event ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :genericallyDependsOn ;
      owl:someValuesFrom :Time_Region ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasConstituent ;
      owl:someValuesFrom :Process ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasParticipant ;
      owl:someValuesFrom :Endurant ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :occupiesTimeDirectly ;
      owl:someValuesFrom :Time_Region ;
    ] ;
  owl:disjointWith :Process ;
  owl:disjointWith :Time_Region ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Perdurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasConstituent ;
                  owl:someValuesFrom :Process ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Event_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Event Feature "@en ;
  rdfs:subClassOf :Occurrence_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Event ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Event ;
    ] ;
.
:Example
  rdf:type owl:Class ;
  rdfs:comment "A designated example of something: a prototypical part of an instance, or a prototypical instance of a type. Derived from the exemplifies relation."@en ;
  rdfs:subClassOf :Role ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Exemplification ;
      owl:onProperty :mutuallySpecDependsOn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasRolePlayer ;
      owl:someValuesFrom [
          rdf:type owl:Restriction ;
          owl:onProperty :exemplifies ;
          owl:someValuesFrom :Particular ;
        ] ;
    ] ;
.
:Exemplification
  rdf:type owl:Class ;
  rdfs:subClassOf :Relator ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasStaticPart ;
      owl:someValuesFrom :Example ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Relator ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasStaticPart ;
                  owl:someValuesFrom :Example ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature is  ontologically dependent on at least two distinct things, a host and some essential part, and emerges from some relation between them . E.g.  hole is hosted by some material entity and has spatial regions as parts (with regions changing as the host moves in space), and emerges from a spatial relation (adjacent containment) between them. A feature is made of parts of the same type, either endurants, perdurants, or situations, so each feature is then itself also a perdurant, endurant or situation, e.g. a hole is also a spatial region."@en ;
  rdfs:label "Feature"@en ;
  rdfs:subClassOf :Particular ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Particular ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Particular ;
      owl:onProperty :hostedBy ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Relator ;
      owl:onProperty :emergesFrom ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :emergesFrom ;
      owl:someValuesFrom :Relator ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Particular ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Particular ;
    ] ;
.
:Fluid
  rdf:type owl:Class ;
  rdfs:subClassOf :State_Of_Matter_Value ;
.
:Fluid_Matter
  rdf:type owl:Class ;
  rdfs:subClassOf :Amount_Of_Matter ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Class ;
          owl:intersectionOf [
              rdf:type rdf:List ;
              rdf:first :State_Of_Matter ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Fluid ;
                      owl:onProperty :hasValue ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasQuality ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:disjointWith :Solid_Matter ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Amount_Of_Matter ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass [
                      rdf:type owl:Class ;
                      owl:intersectionOf [
                          rdf:type rdf:List ;
                          rdf:first :State_Of_Matter ;
                          rdf:rest [
                              rdf:type rdf:List ;
                              rdf:first [
                                  rdf:type owl:Restriction ;
                                  owl:allValuesFrom :Fluid ;
                                  owl:onProperty :hasValue ;
                                ] ;
                              rdf:rest () ;
                            ] ;
                        ] ;
                    ] ;
                  owl:onProperty :hasQuality ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Gas
  rdf:type owl:Class ;
  rdfs:subClassOf :Fluid ;
.
:Geographic_Coordinate_System
  rdf:type owl:Class ;
  rdfs:comment "A coordinate reference system for locating positions relative to the Earth."@en ;
  rdfs:label "Geographic Coordinate System "@en ;
  rdfs:subClassOf :Physical_Reference_System ;
.
:Hole
  rdf:type owl:Class ;
  rdfs:comment "A physical void with a self-connected (non-scattered) host, consisting of some depression or cavity within the host.  E.g. vug, vesicle, miariolitic cavity."@en ;
  rdfs:label "Hole"@en ;
  rdfs:subClassOf :Physical_Void ;
.
:Immaterial_Boundary
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Immaterial Boundary "@en ;
  rdfs:subClassOf :Low_Dimension_Feature ;
.
:Immaterial_Feature
  rdf:type owl:Class ;
  rdfs:comment "A dependent place feature that is immaterial.  E.g. voids, shadows and relational features such as traffic intersections (meeting of roads).   MPF(x) <--> DPF(x) ^ not mat(x)"@en ;
  rdfs:label "Immaterial_Feature "@en ;
  rdfs:subClassOf :Physical_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Region ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Spatial_Region ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Physical_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Spatial_Region ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Spatial_Region ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Inherant
  rdf:type owl:Class ;
  rdfs:comment "An Inherent is a thing that depends for its existence on some independent particular. The inherent thing is a dependent entity in relation to the independent particular that is its bearer. The inherent is associated with the bearer via the 'inheresIn' property. An Inherent is an Endurant because it is present in its totality at any time that it exists. Note: inherants are summative: our colour (the sum of your colour and mine) inheres in us (the sum of you and me)."@en ;
  rdfs:label "Inherant"@en ;
  rdfs:subClassOf :Nonphysical_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Inherant ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Particular ;
      owl:onProperty :inheresIn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:disjointWith :Notional_Endurant ;
  owl:disjointWith :Relator ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Nonphysical_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Particular ;
                  owl:onProperty :inheresIn ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Inherant_Feature
  rdf:type owl:Class ;
  rdfs:comment "based on quality inhering in (essential relation) host. The quality is the focal; Quality inheres in both the feature and the host. Morphologic feature -- focal  is a specific shape (river bend, fold)"@en ;
  rdfs:label "Inherent Feature "@en ;
  rdfs:subClassOf :Nonphysical_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Inherant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Inherant ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Nonphysical_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Inherant ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Inherant ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Liquid
  rdf:type owl:Class ;
  rdfs:subClassOf :Fluid ;
.
:Low_Dimension_Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature that is immaterial but spatially located, typically a lower dimension subdivision of the host  (north pole, equator, earth surface, center of town); host is physical endurant, focal is spatial location relative to host."@en ;
  rdfs:comment "point, line or surface in 3-D space; a line or point in a 2-D space, a point in a 1-D space."@en ;
  rdfs:label "Low Dimension Feature "@en ;
  rdfs:subClassOf :Immaterial_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Spatial_Region_0D ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Spatial_Region_1D ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Spatial_Region_2D ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Spatial_Region_0D ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Spatial_Region_1D ;
                  rdf:rest [
                      rdf:type rdf:List ;
                      rdf:first :Spatial_Region_2D ;
                      rdf:rest () ;
                    ] ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Spatial_Region_0D ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Spatial_Region_1D ;
                  rdf:rest [
                      rdf:type rdf:List ;
                      rdf:first :Spatial_Region_2D ;
                      rdf:rest () ;
                    ] ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Material_Boundary
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Material Boundary "@en ;
  rdfs:subClassOf :Material_Feature ;
.
:Material_Endurant
  rdf:type owl:Class ;
  rdfs:comment "An endurant having a direct physical (at least spatial) quality."@en ;
  rdfs:comment "Material endurants are physical things that occupy space, but are not the spatial region being occupied, e.g. geological formations. This includes holes in objects, which are not merely chunks of space - they are chunks of space in relation to a host object, which hosts the hole. So pores in rocks are material endurants, because they exist relative to a rock, but the space bounded by some lat/long coordinates is not a material endurant, it's just a chunk of space."@en ;
  rdfs:label "Material Endurant"@en ;
  rdfs:subClassOf :Physical_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Material_Endurant ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :occupiesSpaceDirectly ;
      owl:someValuesFrom :Spatial_Region_3D ;
    ] ;
  owl:disjointWith :Spatial_Region ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf (
          :Physical_Endurant
          [
            rdf:type owl:Restriction ;
            owl:onProperty :occupiesSpaceDirectly ;
            owl:someValuesFrom :Spatial_Region_3D ;
          ]
        ) ;
    ] ;
.
:Material_Feature
  rdf:type owl:Class ;
  rdfs:comment "Material Feature (MF): A dependent place feature that is material. - my house's backyard, frontyard."@en ;
  rdfs:label "Material Feature "@en ;
  rdfs:subClassOf :Physical_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Material_Endurant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Material_Endurant ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Physical_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Material_Endurant ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Material_Endurant ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Material_Morphological_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Material Morphological Feature "@en ;
  rdfs:subClassOf :Material_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Shape ;
    ] ;
.
:Material_Object
  rdf:type owl:Class ;
  rdfs:comment "Material Objects things constituted by some amounty of matter, but are not an amount of matter themselves."@en ;
  rdfs:label "Material Object"@en ;
  rdfs:subClassOf :Material_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :isConstituentOf ;
          owl:someValuesFrom :Amount_Of_Matter ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Amount_Of_Matter ;
      owl:onProperty :hasConstituent ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasConstituent ;
      owl:someValuesFrom :Amount_Of_Matter ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first [
              rdf:type owl:Class ;
              owl:complementOf :Amount_Of_Matter ;
            ] ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasConstituent ;
                  owl:someValuesFrom :Amount_Of_Matter ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Measure_Value
  rdf:type owl:Class ;
  rdfs:comment "A determinate value of a quality, e.g. 2.0 or \"some text\"."@en ;
  rdfs:label "Measure Value"@en ;
  rdfs:subClassOf :Quality_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onDataRange xsd:anySimpleType ;
      owl:onProperty :hasDataValue ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasQuality ;
      owl:someValuesFrom :Uncertainty ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasUOM ;
      owl:someValuesFrom :Unit_Of_Measure_Value ;
    ] ;
  owl:disjointWith :Named_Value ;
  owl:disjointWith :Range_Value ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Quality_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onDataRange xsd:anySimpleType ;
                  owl:onProperty :hasDataValue ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Minor_Proportion
  rdf:type owl:Class ;
  rdfs:comment "Constituent is ubiquitous but not abundant"@en ;
  rdfs:comment "Example -- in some granites, hornblende is a minor constituent."@en ;
  rdfs:label "Minor Constituent"@en ;
  rdfs:subClassOf :Proportion_Value ;
.
:Named_Value
  rdf:type owl:Class ;
  rdfs:comment "A named value of some quality,e.g. thin or thick."@en ;
  rdfs:subClassOf :Quality_Value ;
  owl:disjointWith :Range_Value ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Measure_Value ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Range_Value ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Nonphysical_Endurant
  rdf:type owl:Class ;
  rdfs:comment "An endurant that does not occupy space directly, but might occupy space indirectly or not occupy space at all. Indirect spatial occupants have physical endurant parts or are ontologically dependent on physical endurants. Examples of things that indirectly occupy some space, due to such ontological dependence, include physical qualities (my height) and physical relators (reified physical relations). It even includes thoughts, poems, digital files, and datasets, whose existence is tied to being manifest in some physical object (brain, book, storage media). Also includes fictional entities such as unicorns, which must be so manifested to exist."@en ;
  rdfs:label "Nonphysical Endurant"@en ;
  rdfs:subClassOf :Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :occupiesSpaceDirectly ;
          owl:someValuesFrom :Spatial_Region ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Nonphysical_Endurant ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Nonphysical_Quality ;
      owl:onProperty :hasQuality ;
    ] ;
  owl:disjointWith :Physical_Endurant ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:complementOf [
                      rdf:type owl:Restriction ;
                      owl:onProperty :occupiesSpaceDirectly ;
                      owl:someValuesFrom :Spatial_Region ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Nonphysical_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Nonphysical Feature"@en ;
  rdfs:subClassOf :Endurant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Nonphysical_Endurant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Nonphysical_Endurant ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Endurant_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Nonphysical_Endurant ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Nonphysical_Endurant ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Nonphysical_Morphologic_Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature that is not a part of its host, but characterized by the form or structure of the host: Morphological features can have morphological properties e.g. orientation, thickness, fold profile, etc. Examples: - smile or frown / lips.    - mountain / planet surface (protrusion in the planet surface).  - graben and horst / planet surface (protrusion or depression in the planet surface caused by faulting)."@en ;
  rdfs:label "Morphologic Feature"@en ;
  rdfs:subClassOf :Inherant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Shape_Value ;
    ] ;
  owl:disjointWith :Pattern_Feature ;
.
:Nonphysical_Quality
  rdf:type owl:Class ;
  rdfs:subClassOf :Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Nonphysical_Endurant ;
      owl:onProperty :isQualityOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Nonphysical_Endurant ;
      owl:onProperty :isQualityOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:disjointWith :Physical_Quality ;
  owl:disjointWith :Temporal_Quality ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Quality ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Nonphysical_Endurant ;
                  owl:onProperty :isQualityOf ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Nonphysical_Reference_System
  rdf:type owl:Class ;
  rdfs:subClassOf :Reference_System ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :isReferenceSystemFor ;
      owl:someValuesFrom :Nonphysical_Quality ;
    ] ;
  owl:disjointWith :Physical_Reference_System ;
  owl:disjointWith :Temporal_Reference_System ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Reference_System ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :isReferenceSystemFor ;
                  owl:someValuesFrom :Nonphysical_Quality ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Notional_Endurant
  rdf:type owl:Class ;
  rdfs:comment "Notional endurants do not occupy space, neither directly nor indirectly. such as ghosts, some dieties, or numbers. Notional endurants may occupy time (e.g. ghosts), or may not occupy time (e.g. numbers, which are atemporal). Notional endurants can be part of physical things (e.g. when dieties are held to be part of people), but cannot have physical parts (e.g. when dieties do not have people as parts)."@en ;
  rdfs:label "Notional Endurant "@en ;
  rdfs:subClassOf :Nonphysical_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :occupiesSpace ;
          owl:someValuesFrom :Spatial_Region ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Notional_Endurant ;
      owl:onProperty :hasPart ;
    ] ;
  owl:disjointWith :Relator ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Nonphysical_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:complementOf [
                      rdf:type owl:Restriction ;
                      owl:onProperty :occupiesSpace ;
                      owl:someValuesFrom :Spatial_Region ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Numeric_Value
  rdf:type owl:Class ;
  rdfs:comment "Quality that specifies a numeric value for some quality"@en ;
  rdfs:label "Numeric Value "@en ;
  rdfs:subClassOf :Measure_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:decimal ;
      owl:onProperty :hasDataValue ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Measure_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:allValuesFrom xsd:decimal ;
                  owl:onProperty :hasDataValue ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Occurrence_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Occurrence Feature "@en ;
  rdfs:subClassOf :Perdurant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Event ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Process ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Event ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Process ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
  owl:disjointWith :Temporal_Feature ;
.
:Part
  rdf:type owl:Class ;
  rdfs:comment "The part in a whole-part relation"@en ;
  rdfs:subClassOf :Role ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Parthood ;
      owl:onProperty :mutuallySpecDependsOn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasRolePlayer ;
      owl:someValuesFrom [
          rdf:type owl:Restriction ;
          owl:onProperty :isPartOf ;
          owl:someValuesFrom :Particular ;
        ] ;
    ] ;
  owl:disjointWith :Whole ;
.
:Parthood
  rdf:type owl:Class ;
  rdfs:comment "Reification of the parthood relation (i.e. to be in a whole-part relation)."@en ;
  rdfs:subClassOf :Relator ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Whole ;
      owl:onProperty :hasStaticPart ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasStaticPart ;
      owl:someValuesFrom :Part ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Relator ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasStaticPart ;
                  owl:someValuesFrom [
                      rdf:type owl:Class ;
                      owl:unionOf [
                          rdf:type rdf:List ;
                          rdf:first :Part ;
                          rdf:rest [
                              rdf:type rdf:List ;
                              rdf:first :Whole ;
                              rdf:rest () ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Particular
  rdf:type owl:Class ;
  rdfs:comment "AKA 'Entity', 'Thing'. Any individual in the DOLCE domain of discourse. The extensional coverage of DOLCE is as large as possible, since it ranges on 'possibilia', i.e all possible individuals that can be postulated by means of DOLCE axioms. Possibilia include physical objects, substances, processes, qualities, conceptual regions, non-physical objects, collections and even arbitrary sums of objects.The class 'particular' features a covering partition that includes: endurant, perdurant, quality, and abstract. There are also some subclasses defined as unions of subclasses of 'particular' for special purposes: spatio-temporal-particular (any particular except abstracts)- physical-realization (any realization of an information object, defined in the ExtendedDnS ontology)."@en ;
  rdfs:label "Particular"@en ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Feature ;
      owl:onProperty :hosts ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Inherant ;
      owl:onProperty :hasInherant ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Particular ;
      owl:onProperty :determinedBy ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Particular ;
      owl:onProperty :isExampleOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Situation ;
      owl:onProperty :hasSetting ;
    ] ;
.
:Pattern_Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature that denotes a manifestation of a pattern. A pattern in GSO is a relation, in two senses: (1) an abstract pattern is a template, which can be expressed as an n-ary predicate with some variables as relata; (2) a manifested pattern is an occurence of the template in some host, and can be expressed as either (a) an n-ary relation with only constants as relata, or (b) an instance of the reification of this relation (i.e. a Relator instance). E.g. wood grain is hosted by some wood matter and the pattern is the reified relation between its wood fibres. Different wood grains are then different (reified and instantiated) relations between its fibres."@en ;
  rdfs:subClassOf :Inherant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Relator ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Relator ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Inherant_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Relator ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Relator ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Pause
  rdf:type owl:Class ;
  rdfs:comment "Pause within an event or process, e.g. Intermission during hockey game or theater performance (host = playing process, constituent = time interval)"@en ;
  rdfs:label "Pause "@en ;
  rdfs:subClassOf :Temporal_Void ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Event ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Process ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hostedBy ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Perdurant
  rdf:type owl:Class ;
  rdfs:comment "Perdurants (AKA occurrences) comprise what are variously called events, processes, phenomena, activities and states. They can have temporal parts or spatial parts. For instance, the first movement of (an execution of) a symphony is a temporal part of the symphony. On the other hand, the play performed by the left side of the orchestra is a spatial part. In both cases, these parts are occurrences themselves. We assume that objects cannot be parts of occurrences, but rather they participate in them. Perdurants extend in time by accumulating different temporal parts, so that, at any time they are present, they are only partially present, in the sense that some of their proper temporal parts (e.g., their previous or future phases) may be not present. E.g., the piece of paper you are reading now is wholly present, while some temporal parts of your reading are not present yet, or any more. Philosophers say that endurants are entities that are in time, while lacking temporal parts (so to speak, all their parts flow with them in time). Perdurants, on the contrary, are entities that happen in time, and can have temporal parts (all their parts are fixed in time)."@en ;
  rdfs:label "Perdurant"@en ;
  rdfs:subClassOf :Particular ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Perdurant ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Region ;
      owl:onProperty :occupiesSpaceIndirectly ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Particular ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:unionOf [
                      rdf:type rdf:List ;
                      rdf:first :Time_Region ;
                      rdf:rest [
                          rdf:type rdf:List ;
                          rdf:first [
                              rdf:type owl:Restriction ;
                              owl:onProperty :occupiesTimeDirectly ;
                              owl:someValuesFrom :Time_Region ;
                            ] ;
                          rdf:rest () ;
                        ] ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Perdurant_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Perdurant Feature "@en ;
  rdfs:subClassOf :Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Perdurant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Perdurant ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Particular ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Perdurant ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Perdurant ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Physical_Endurant
  rdf:type owl:Class ;
  rdfs:comment "An endurant that occupies space directly"@en ;
  rdfs:label "Physical Endurant"@en ;
  rdfs:subClassOf :Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Physical_Endurant ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Physical_Quality ;
      owl:onProperty :hasQuality ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :constantlySpecDependsOn ;
      owl:someValuesFrom :Physical_Quality ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :occupiesTimeIndirectly ;
      owl:someValuesFrom :Time_Region ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:unionOf [
                      rdf:type rdf:List ;
                      rdf:first :Spatial_Region ;
                      rdf:rest [
                          rdf:type rdf:List ;
                          rdf:first [
                              rdf:type owl:Restriction ;
                              owl:onProperty :occupiesSpaceDirectly ;
                              owl:someValuesFrom :Spatial_Region ;
                            ] ;
                          rdf:rest () ;
                        ] ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :constantlySpecDependsOn ;
                  owl:someValuesFrom :Physical_Quality ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Physical_Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature for which the host is involved in some essential spatial relation,e g. adjacency, containment, intersection, contact."@en ;
  rdfs:label "Physical Feature "@en ;
  rdfs:subClassOf :Endurant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Physical_Endurant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Physical_Endurant ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Endurant_Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Physical_Endurant ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Physical_Endurant ;
                      owl:onProperty :hasEssentialPart ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Physical_Gap
  rdf:type owl:Class ;
  rdfs:comment "A physical void with a scattered (disconnected) host, consisting of the spaces between the scattered parts of the host. e.g. porosity in a rock.   {@en}"@en ;
  rdfs:label "Gap"@en ;
  rdfs:subClassOf :Physical_Void ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ;
      owl:onClass :Material_Endurant ;
      owl:onProperty :hostedBy ;
    ] ;
.
:Physical_Quality
  rdf:type owl:Class ;
  rdfs:comment "Quantifiers for dimensions of spatial regions or for location of spatial region in some reference frame."@en ;
  rdfs:label "Physical Quality "@en ;
  rdfs:subClassOf :Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Physical_Endurant ;
      owl:onProperty :isQualityOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:disjointWith :Temporal_Quality ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Quality ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Physical_Endurant ;
                  owl:onProperty :isQualityOf ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Physical_Reference_System
  rdf:type owl:Class ;
  rdfs:comment "A set of conventions for describing values of qualities of physical endurants."@en ;
  rdfs:label "Physical Reference System"@en ;
  rdfs:subClassOf :Reference_System ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :isReferenceSystemFor ;
      owl:someValuesFrom :Temporal_Quality ;
    ] ;
  owl:disjointWith :Temporal_Reference_System ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Reference_System ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :isReferenceSystemFor ;
                  owl:someValuesFrom :Temporal_Quality ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Physical_Void
  rdf:type owl:Class ;
  rdfs:comment "A chunk of physical space adjacent to some material feature and surrounded by it. (holes,valleys, canyon, cave, gap, space between fingers). host must be self connected.  An empty physical space in 3D. Distinct from abstract mathematical spaces, which include spaces made from various reference frames, including coordinate systems imposed on the earth (these are abstract imposed on real space). V(x) <--> IPF(x) ^ exists y [hosts-v (y,x)]"@en ;
  rdfs:label "Physical Void"@en ;
  rdfs:subClassOf :Place_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Material_Endurant ;
      owl:onProperty :hostedBy ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Material_Endurant ;
    ] ;
.
:Place_Feature
  rdf:type owl:Class ;
  rdfs:comment "chunk of physical space (the focal); only hosted by and relative to a material entity, thus not fixed in space (host can move) (downtown, outside my house, personal space)"@en ;
  rdfs:label "Place Feature "@en ;
  rdfs:subClassOf :Immaterial_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Region_3D ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Spatial_Region_3D ;
    ] ;
.
:Plasma
  rdf:type owl:Class ;
  rdfs:subClassOf :Fluid ;
.
:Process
  rdf:type owl:Class ;
  rdfs:comment "In Basic Formal Ontology: An occurrent entity that exists in time by occurring or happening, has temporal (proper) parts, and always depends on some material (continuant) entity (Arp et al., 2015, p. 121; Notes in parenthesis () from Mustafa Jarrar https://www.slideshare.net/jarrar02/classifying-processes-and-basic-formal-ontology) Processes are not necessarily homeomeric or cumulative.  \" process is a series of events to produce a result\" (https://wikidiff.com/event/process)  \"A process may also be defined as the workflows and sequence of events inherent in processes such as manufacturing, engineering and business processes.\" (https://en.wikipedia.org/wiki/Process_ontology)"@en ;
  rdfs:label "Process"@en ;
  rdfs:subClassOf :Perdurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Event ;
      owl:onProperty :isConstituentOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Process ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :genericallyDependsOn ;
      owl:someValuesFrom :Time_Region ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasParticipant ;
      owl:someValuesFrom :Endurant ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :occupiesTimeDirectly ;
      owl:someValuesFrom :Time_Region ;
    ] ;
  owl:disjointWith :Time_Region ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Perdurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:complementOf [
                      rdf:type owl:Class ;
                      owl:unionOf [
                          rdf:type rdf:List ;
                          rdf:first :Event ;
                          rdf:rest [
                              rdf:type rdf:List ;
                              rdf:first :Time_Region ;
                              rdf:rest () ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Process_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Process Feature "@en ;
  rdfs:subClassOf :Occurrence_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Process ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Process ;
    ] ;
.
:Proportion
  rdf:type owl:Class ;
  rdfs:comment "A quality denoting the fraction that a part composes a whole. Numeric values will range from 0 to 1 (0 to 100%); might also have categorical determinates like 'dominant', 'subordinate', 'minor', 'rare', 'absent'. Can only be the quality of a part role - only specifies how much a part makes up a whole."@en ;
  rdfs:label "Proportion"@en ;
  rdfs:subClassOf :Nonphysical_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Part ;
      owl:onProperty :isQualityOf ;
    ] ;
.
:Proportion_Value
  rdf:type owl:Class ;
  rdfs:comment "Value of Proportion quality"@en ;
  rdfs:label "Proportion Value"@en ;
  rdfs:subClassOf :Named_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Proportion ;
      owl:onProperty :isValueOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Proportion ;
      owl:onProperty :isValueOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Quality
  rdf:type owl:Class ;
  rdfs:comment "A colour, mass, density, etc., that inheres in its carrier. Must have essential parts that are its values, e.g. red or 2.0, that can change over time, and it cannot have any other kind of part. Qualities can have qualities, such as colour having the qualities hue, value, situation."@en ;
  rdfs:label "Quality"@en ;
  rdfs:subClassOf :Inherant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Quality_Value ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Quality_Value ;
      owl:onProperty :hasValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasValue ;
      owl:someValuesFrom :Quality_Value ;
    ] ;
  owl:disjointWith :Quality_Value ;
  owl:disjointWith :Role ;
  owl:disjointWith [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first [
              rdf:type owl:Class ;
              owl:complementOf [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Particular ;
                ] ;
            ] ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasPart ;
                  owl:someValuesFrom :Particular ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Inherant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasValue ;
                  owl:someValuesFrom :Quality_Value ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Quality_Value
  rdf:type owl:Class ;
  rdfs:comment "A value of(part of) a quality; can be a determinate value, a range, or a named value specified wrt a reference system."@en ;
  rdfs:label "Quality Value"@en ;
  rdfs:subClassOf :Inherant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Quality ;
      owl:onProperty :isValueOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasReferenceSystem ;
      owl:someValuesFrom :Reference_System ;
    ] ;
  owl:disjointWith :Role ;
  owl:disjointWith [
      rdf:type owl:Restriction ;
      owl:onProperty :hasPart ;
      owl:someValuesFrom :Particular ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Inherant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Quality ;
                  owl:onProperty :isValueOf ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Range_Value
  rdf:type owl:Class ;
  rdfs:comment "A range value for some quality, e.g. 2.0-3.0 or thin-thick"@en ;
  rdfs:label "Quality Range "@en ;
  rdfs:subClassOf :Quality_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEndValue ;
      owl:someValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Measure_Value ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Named_Value ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasStartValue ;
      owl:someValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Measure_Value ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Named_Value ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Quality_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEndValue ;
                  owl:someValuesFrom [
                      rdf:type owl:Class ;
                      owl:unionOf [
                          rdf:type rdf:List ;
                          rdf:first :Measure_Value ;
                          rdf:rest [
                              rdf:type rdf:List ;
                              rdf:first :Named_Value ;
                              rdf:rest () ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:onProperty :hasStartValue ;
                      owl:someValuesFrom [
                          rdf:type owl:Class ;
                          owl:unionOf [
                              rdf:type rdf:List ;
                              rdf:first :Measure_Value ;
                              rdf:rest [
                                  rdf:type rdf:List ;
                                  rdf:first :Named_Value ;
                                  rdf:rest () ;
                                ] ;
                            ] ;
                        ] ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Rare_Proportion
  rdf:type owl:Class ;
  rdfs:comment "Constituent is present but uncommon and rarely observed."@en ;
  rdfs:comment "Example-- in a typical granite, zircon and apatite are rare constituents"@en ;
  rdfs:label "Rare constituent "@en ;
  rdfs:subClassOf :Proportion_Value ;
.
:Reference_System
  rdf:type owl:Class ;
  rdfs:comment "Notional endurant that establishes a frame of reference for a quality value. Although typically mathematical,  it is not necessarily abstract, because some reference systems are dependent on non-abstract endurants located in space or time; e.g. a spatial coordinate system for the earth (tied to the Earth's ellipsoid), or a temporal coordinate system tied to the Earth's moon or sun (i.e. lunar or solar calendar)"@en ;
  rdfs:label "Reference System "@en ;
  rdfs:subClassOf :Notional_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :isReferenceSystemFor ;
      owl:someValuesFrom :Quality_Value ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Notional_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :isReferenceSystemFor ;
                  owl:someValuesFrom :Quality_Value ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Relator
  rdf:type owl:Class ;
  rdfs:comment "A reified relation: e.g. parthood reifying the whole-part relation, or meeting reifying the meets relation. Consists of static parts only, which are the roles played by each relata in the relation (with min 2 for a binary relation). A relator is thus specifically (statically) dependent on each part (min 2) and on each relata (min 2) - the relata are not parts. Relators can also have qualities, which are also not parts, such as the intensity of the relation."@en ;
  rdfs:label "Relator "@en ;
  rdfs:subClassOf :Nonphysical_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Role ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ;
      owl:onClass :Role ;
      owl:onProperty :hasStaticPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ;
      owl:onClass :Role ;
      owl:onProperty :mutuallySpecDependsOn ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minQualifiedCardinality "4"^^xsd:nonNegativeInteger ;
      owl:onClass :Particular ;
      owl:onProperty :specificallyDependsOn ;
    ] ;
  owl:disjointWith [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first [
              rdf:type owl:Class ;
              owl:complementOf [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasStaticPart ;
                  owl:someValuesFrom :Particular ;
                ] ;
            ] ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasPart ;
                  owl:someValuesFrom :Particular ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Inherant ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Notional_Endurant ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Role
  rdf:type owl:Class ;
  rdfs:comment "Roles are played by a relata in a relation, e.g. a person plays the role of employee in an employs relation.  The relata playing the role is the RolePlayer and the other relata are RoleObjects. Because a role is derived from a specific relation, e.g. this employment, it mutully depends on a specific reified relation (Relator). Roles do not have parts, but  carry qualities -  indeed, are a bundle of qualities."@en ;
  rdfs:label "Role  "@en ;
  rdfs:subClassOf :Inherant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Particular ;
      owl:onProperty :hasRolePlayer ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Relator ;
      owl:onProperty :mutuallySpecDependsOn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasRoleObject ;
      owl:someValuesFrom :Particular ;
    ] ;
  owl:disjointWith [
      rdf:type owl:Restriction ;
      owl:onProperty :hasPart ;
      owl:someValuesFrom :Particular ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Inherant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:complementOf [
                      rdf:type owl:Class ;
                      owl:unionOf [
                          rdf:type rdf:List ;
                          rdf:first :Quality ;
                          rdf:rest [
                              rdf:type rdf:List ;
                              rdf:first :Quality_Value ;
                              rdf:rest () ;
                            ] ;
                        ] ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Sample
  rdf:type owl:Class ;
  rdfs:comment "A dislocated part of a thing, collected for some reason. Some samples are also examples of their whole (i.e. are prototypical) and others are not."@en ;
  rdfs:subClassOf :Part ;
.
:Setting
  rdf:type owl:Class ;
  rdfs:comment "A situation defined by  particulars.  Example subtypes are Marine Setting and Alluvial Fan Setting. A full subtype hierarchy is implemented in the OWL ontology in the gsen: namespace (http://loop3d.org/GSO/ontology/2020/1/eventenvironment)."@en ;
  rdfs:label "Setting"@en ;
  rdfs:subClassOf :Situation ;
  owl:equivalentClass [
      rdf:type owl:Restriction ;
      owl:onProperty :isSettingFor ;
      owl:someValuesFrom :Particular ;
    ] ;
.
:Shape
  rdf:type owl:Class ;
  rdfs:comment "Property to specify the shape of an object. Lots of possible property spaces under this, e.g. (in geology) roundness, sphericity, aspect ratio. These are implemented as separate properties linked to gsoc:Shape via hasQuality"@en ;
  rdfs:label "Shape Property"@en ;
  rdfs:subClassOf :Physical_Quality ;
.
:Shape_Value
  rdf:type owl:Class ;
  rdfs:subClassOf :Named_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Shape ;
      owl:onProperty :isValueOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Shape ;
      owl:onProperty :isValueOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Situation
  rdf:type owl:Class ;
  rdfs:comment "A situation is a fragment of the world, and is a unified whole with static parts only - any change of parts results in a different situation. The parts can be any type of particular, either endurants, perdurants, features, or situations. Situations overlap with perdurants and endurants: e.g. some situations are endurants (endurant parts only) or perdurants (perduranty parts only), and others are just situations (mixed endurant and perdurant parts). Because features are either endurants, perdurants or situations too, all situations with feature parts will also be one of these types. However, it is still tbd if situations comprised of features are features too."@en ;
  rdfs:label "Situation"@en ;
  rdfs:subClassOf :Particular ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasStaticPart ;
      owl:someValuesFrom :Particular ;
    ] ;
  owl:disjointWith [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :hasPart ;
          owl:someValuesFrom :Particular ;
        ] ;
    ] ;
  owl:disjointWith [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first [
              rdf:type owl:Class ;
              owl:complementOf [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasStaticPart ;
                  owl:someValuesFrom :Particular ;
                ] ;
            ] ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasPart ;
                  owl:someValuesFrom :Particular ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Situation_Feature
  rdf:type owl:Class ;
  rdfs:subClassOf :Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Situation ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Situation ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Feature ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :hasEssentialPart ;
                  owl:someValuesFrom :Situation ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Solid
  rdf:type owl:Class ;
  rdfs:subClassOf :State_Of_Matter_Value ;
.
:Solid_Matter
  rdf:type owl:Class ;
  rdfs:comment "An amount of matter that is in a solid state"@en ;
  rdfs:subClassOf :Amount_Of_Matter ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass [
          rdf:type owl:Class ;
          owl:intersectionOf [
              rdf:type rdf:List ;
              rdf:first :State_Of_Matter ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first [
                      rdf:type owl:Restriction ;
                      owl:allValuesFrom :Solid ;
                      owl:onProperty :hasValue ;
                    ] ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasQuality ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Amount_Of_Matter ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass [
                      rdf:type owl:Class ;
                      owl:intersectionOf [
                          rdf:type rdf:List ;
                          rdf:first :State_Of_Matter ;
                          rdf:rest [
                              rdf:type rdf:List ;
                              rdf:first [
                                  rdf:type owl:Restriction ;
                                  owl:allValuesFrom :Solid ;
                                  owl:onProperty :hasValue ;
                                ] ;
                              rdf:rest () ;
                            ] ;
                        ] ;
                    ] ;
                  owl:onProperty :hasQuality ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Spatial_Location
  rdf:type owl:Class ;
  rdfs:comment "A physical property that specifies the position of an entity relative to some spatial reference system. Use WKT strings (ogc:WKTLiteral, https://www.w3.org/2011/02/GeoSPARQL.pdf)  as data values."@en ;
  rdfs:label "Spatial Location"@en ;
  rdfs:subClassOf :Physical_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Region ;
      owl:onProperty :isQualityOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Value ;
      owl:onProperty :hasValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Spatial_Region ;
      owl:onProperty :isQualityOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Spatial_Region
  rdf:type owl:Class ;
  rdfs:label "Spatial Region"@en ;
  rdfs:subClassOf :Physical_Endurant ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :hasConstituent ;
          owl:someValuesFrom :Amount_Of_Matter ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Material_Endurant ;
      owl:onProperty :spaceOccupiedDirectlyBy ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Region ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Spatial_Location ;
      owl:onProperty :hasQuality ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Physical_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Class ;
                  owl:complementOf [
                      rdf:type owl:Restriction ;
                      owl:onProperty :hasConstituent ;
                      owl:someValuesFrom :Amount_Of_Matter ;
                    ] ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Physical_Endurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Spatial_Location ;
                  owl:onProperty :hasQuality ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Spatial_Region_0D
  rdf:type owl:Class ;
  rdfs:comment "A degenerate spatial region that is a single point location." ;
  rdfs:label "1D Spatial Region "@en ;
  rdfs:subClassOf :Spatial_Region ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :hasPart ;
          owl:someValuesFrom :Particular ;
        ] ;
    ] ;
.
:Spatial_Region_1D
  rdf:type owl:Class ;
  rdfs:comment "A spatial region that is defined as a segment of a line; Spatial reference system defines location of origin along the line and the unit of measure for coordinate locations" ;
  rdfs:label "1D Spatial Region "@en ;
  rdfs:subClassOf :Spatial_Region ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Spatial_Region_0D ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Spatial_Region_1D ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasPart ;
    ] ;
.
:Spatial_Region_2D
  rdf:type owl:Class ;
  rdfs:comment "spatial region that is a connected subset of a surface."@en ;
  rdfs:label "2D Spatial Region "@en ;
  rdfs:subClassOf :Spatial_Region ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Spatial_Region_0D ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Spatial_Region_1D ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasPart ;
    ] ;
.
:Spatial_Region_3D
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "3 D Spatial Region "@en ;
  rdfs:subClassOf :Spatial_Region ;
.
:Spatial_Value
  rdf:type owl:Class ;
  rdfs:subClassOf :Measure_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Geographic_Coordinate_System ;
      owl:onProperty :hasReferenceSystem ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Spatial_Location ;
      owl:onProperty :isValueOf ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Measure_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:allValuesFrom :Spatial_Location ;
                  owl:onProperty :isValueOf ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:State_Of_Matter
  rdf:type owl:Class ;
  rdfs:label "State of Matter"@en ;
  rdfs:subClassOf :Physical_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :isQualityOf ;
      owl:someValuesFrom :Amount_Of_Matter ;
    ] ;
.
:State_Of_Matter_Value
  rdf:type owl:Class ;
  rdfs:subClassOf :Named_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :State_Of_Matter ;
      owl:onProperty :isValueOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :State_Of_Matter ;
      owl:onProperty :isValueOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Subordinate_Proportion
  rdf:type owl:Class ;
  rdfs:comment "Constituent is less abundant than dominant constituent, but present in sufficient abundance to be an obvious constituent"@en ;
  rdfs:comment "Example--in a typical granite, biotite is a subordinate constituent."@en ;
  rdfs:label "Subordinate Constituent"@en ;
  rdfs:subClassOf :Proportion_Value ;
.
:Temporal_Boundary
  rdf:type owl:Class ;
  rdfs:comment "examples: start of Jan.  host = Jan; constituent = start datetime of every Jan"@en ;
  rdfs:label "Temporal Boundary "@en ;
  rdfs:subClassOf :Time_Instant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom :Time_Interval_Feature ;
    ] ;
.
:Temporal_Feature
  rdf:type owl:Class ;
  rdfs:comment "A feature for which either the constituent  is a Perdurant"@en ;
  rdfs:label "Temporal Feature "@en ;
  rdfs:subClassOf :Perdurant_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Time_Region ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Time_Region ;
    ] ;
.
:Temporal_Gap
  rdf:type owl:Class ;
  rdfs:comment "Gap in time between perdurants, E.g. offseason = time between end of sports season and beginning of next; hosts = sports seasons (2020 and 2021 NHL campaign events), constituent = time interval; relation = temporally disjoint"@en ;
  rdfs:label "Temporal Gap "@en ;
  rdfs:subClassOf :Temporal_Void ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minQualifiedCardinality "2"^^xsd:nonNegativeInteger ;
      owl:onClass [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Event ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Process ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hostedBy ;
    ] ;
.
:Temporal_Location
  rdf:type owl:Class ;
  rdfs:comment "The location of a time region within a temporal reference system. Has temporal values such as 21 Jan 2020 or 100 Ma - 200 Ma."@en ;
  rdfs:label "Temporal location "@en ;
  rdfs:subClassOf :Temporal_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Time_Region ;
      owl:onProperty :isQualityOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Temporal_Range ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Temporal_Value ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :hasValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Time_Region ;
      owl:onProperty :isQualityOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Temporal_Quality
  rdf:type owl:Class ;
  rdfs:comment "Quality that specifies the temporal location or duration that is the extent of some TimeRegion"@en ;
  rdfs:label "Temporal Quality"@en ;
  rdfs:subClassOf :Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Perdurant ;
      owl:onProperty :isQualityOf ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Quality ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Perdurant ;
                  owl:onProperty :isQualityOf ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Temporal_Range
  rdf:type owl:Class ;
  rdfs:comment "Quality that specifies a quality value for a Temporal Location that is a time interval with a start and end temporal value"@en ;
  rdfs:label "Temporal Range "@en ;
  rdfs:subClassOf :Range_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Location ;
      owl:onProperty :isValueOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Value ;
      owl:onProperty :hasEndValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Value ;
      owl:onProperty :hasStartValue ;
    ] ;
.
:Temporal_Reference_System
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Temporal Reference System "@en ;
  rdfs:subClassOf :Reference_System ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :isReferenceSystemFor ;
      owl:someValuesFrom :Perdurant ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Reference_System ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onProperty :isReferenceSystemFor ;
                  owl:someValuesFrom :Perdurant ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Temporal_Value
  rdf:type owl:Class ;
  rdfs:comment "Quality that specifies a temporal location"@en ;
  rdfs:label "Temporal Value "@en ;
  rdfs:subClassOf :Measure_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Location ;
      owl:onProperty :isValueOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Reference_System ;
      owl:onProperty :hasReferenceSystem ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Measure_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:allValuesFrom :Temporal_Location ;
                  owl:onProperty :isValueOf ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Temporal_Void
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Temporal Void "@en ;
  rdfs:subClassOf :Time_Interval_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hostedBy ;
      owl:someValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Event ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Process ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
.
:Time_Date_Value
  rdf:type owl:Class ;
  rdfs:label "Time Date Value "@en ;
  rdfs:subClassOf :Temporal_Value ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first [
              rdf:type owl:Restriction ;
              owl:allValuesFrom xsd:date ;
              owl:onProperty :hasDataValue ;
            ] ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:allValuesFrom xsd:dateTime ;
                  owl:onProperty :hasDataValue ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Time_Instant
  rdf:type owl:Class ;
  rdfs:comment "An instant is identified by a temporal location (100 Ma) or a single boundary, which is either another time instant or feature (e.g. the start of an event) that is not necessarily located (e.g. the date might be unknown or fuzzy)."@en ;
  rdfs:comment "represents a point location in time. A time instant does not have parts."@en ;
  rdfs:label "Time Instant"@en ;
  rdfs:subClassOf :Time_Region ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Restriction ;
          owl:onProperty :hasPart ;
          owl:someValuesFrom :Time_Region ;
        ] ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Time_Instant_Location ;
      owl:onProperty :hasQuality ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Time_Instant_Location ;
      owl:onProperty :specificallyDependsOn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  owl:disjointWith :Time_Interval ;
.
:Time_Instant_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Time Instant Feature "@en ;
  rdfs:subClassOf :Temporal_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Time_Instant ;
      owl:onProperty :hasEssentialPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Time_Instant ;
    ] ;
  owl:disjointWith :Time_Interval_Feature ;
.
:Time_Instant_Location
  rdf:type owl:Class ;
  rdfs:comment "quality the specifies the temporal coordinates of a time instant in some temporal reference system"@en ;
  rdfs:label "Time Instant Location"@en ;
  rdfs:subClassOf :Temporal_Location ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Value ;
      owl:onProperty :hasValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasValue ;
      owl:someValuesFrom :Temporal_Value ;
    ] ;
.
:Time_Interval
  rdf:type owl:Class ;
  rdfs:comment "A region of time that has a duration greater than 0."@en ;
  rdfs:comment "Time intervals are continuous without gaps."@en ;
  rdfs:label "Time Interval"@en ;
  rdfs:subClassOf :Time_Region ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Time_Interval_Location ;
      owl:onProperty :hasQuality ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Time_Interval_Location ;
      owl:onProperty :specificallyDependsOn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
:Time_Interval_Feature
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Time Interval Feature "@en ;
  rdfs:subClassOf :Temporal_Feature ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasEssentialPart ;
      owl:someValuesFrom :Time_Interval ;
    ] ;
.
:Time_Interval_Location
  rdf:type owl:Class ;
  rdfs:comment "quality the specifies the temporal coordinates of the beginning and end of time interval in some temporal reference system"@en ;
  rdfs:label "Time Interval Location"@en ;
  rdfs:subClassOf :Temporal_Location ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Temporal_Range ;
      owl:onProperty :hasValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasQuality ;
      owl:someValuesFrom :Duration ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasValue ;
      owl:someValuesFrom :Temporal_Range ;
    ] ;
.
:Time_Numeric_Value
  rdf:type owl:Class ;
  rdfs:comment "Quality that specifies a temporal location with a temporal coordinate or an xsd dateTime"@en ;
  rdfs:label "Time Instant Value "@en ;
  rdfs:subClassOf :Temporal_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:decimal ;
      owl:onProperty :hasDataValue ;
    ] ;
.
:Time_Region
  rdf:type owl:Class ;
  rdfs:comment "A chunk of time, either an instant or interval. Temporal quality is used to represent the temporal location."@en ;
  rdfs:comment "An interesting problem is the relation between regions that share boundaries but vary in location? For example, between Jurassic (boundary identified) and Jurassic ICS 2014 (boundary + location identified)."@en ;
  rdfs:comment "Mapping: corresponds to http://www.w3.org/2006/time#TemporalEntity"@en ;
  rdfs:label "Time Region"@en ;
  rdfs:subClassOf :Perdurant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Time_Region ;
      owl:onProperty :hasPart ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Event ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Process ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
      owl:onProperty :timeOccupiedDirectlyBy ;
    ] ;
  owl:equivalentClass [
      rdf:type owl:Class ;
      owl:intersectionOf [
          rdf:type rdf:List ;
          rdf:first :Perdurant ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first [
                  rdf:type owl:Restriction ;
                  owl:onClass :Temporal_Location ;
                  owl:onProperty :hasQuality ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ] ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
.
:Uncertainty
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Uncertainty"@en ;
  rdfs:subClassOf :Nonphysical_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Measure_Value ;
      owl:onProperty :isQualityOf ;
    ] ;
.
:Unit_Of_Measure
  rdf:type owl:Class ;
  rdfs:label "Units of measurement"@en ;
  rdfs:subClassOf :Nonphysical_Quality ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Measure_Value ;
      owl:onProperty :isQualityOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Unit_Of_Measure_Value ;
      owl:onProperty :hasValue ;
    ] ;
.
:Unit_Of_Measure_Value
  rdf:type owl:Class ;
  rdfs:comment "" ;
  rdfs:label "Unit of Measure Value "@en ;
  rdfs:subClassOf :Named_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom :Unit_Of_Measure ;
      owl:onProperty :isValueOf ;
    ] ;
.
:WKT_Value
  rdf:type owl:Class ;
  rdfs:comment "Text string to specify a spatial location according to ISO/IEC 13249-3:2016  (Information technology – Database languages – SQL multimedia and application packages – Part 3: Spatial (5th ed.), ISO, 2016-01-15, retrieved 2019-01-28)"@en ;
  rdfs:label "WKT Value"@en ;
  rdfs:subClassOf :Spatial_Value ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom xsd:string ;
      owl:onProperty :hasDataValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasDataValue ;
      owl:someValuesFrom xsd:string ;
    ] ;
.
:Whole
  rdf:type owl:Class ;
  rdfs:subClassOf :Role ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass :Parthood ;
      owl:onProperty :mutuallySpecDependsOn ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty :hasRolePlayer ;
      owl:someValuesFrom [
          rdf:type owl:Restriction ;
          owl:onProperty :hasPart ;
          owl:someValuesFrom :Particular ;
        ] ;
    ] ;
.
:adjacentlyDependsOn
  rdf:type owl:ObjectProperty ;
  rdfs:comment "specific dependence with spatial adjacency of relata"@en ;
  rdfs:subPropertyOf :spatiallyTouches ;
  rdfs:subPropertyOf :spatio-temporallyDependsOn ;
  rdfs:subPropertyOf :timeIntersects ;
.
:constantlyGenDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :genericallyDependsOn ;
  rdfs:subPropertyOf :timeIncludedBy ;
.
:constantlySpecDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :constantlyGenDependsOn ;
  rdfs:subPropertyOf :specificallyDependsOn ;
.
:containedBy
  rdf:type owl:ObjectProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)"@en ;
  rdfs:comment "The interior and boundary of the subject spatial region intesect only the interior of the object spatial region. Subject region is in the interior of the object region."@en ;
  rdfs:comment "skos:altLabel--  within"@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
  owl:inverseOf :contains ;
.
:contains
  rdf:type owl:ObjectProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)" ;
  rdfs:comment "Only the interior of the subject region intersects the interior or the boundary of the object region;  the boundaries do not intersect."@en ;
  rdfs:comment "object region lies in subject region, and the interiors intersect. Another definition: \"subject region contains object region  iff no points of object region lie in the exterior of subject region, and at least one point of the interior of object region lies in the interior of subject region\"."@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:coveredBy
  rdf:type owl:ObjectProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)" ;
  rdfs:comment "the boundary of the subject intesects the interior or the boundary of the object region, and the interior of the subject intersects only the interior of the object region.  Every point of the subject region is a point in the interior or the boundary of the object region."@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
  owl:inverseOf :covers ;
.
:covers
  rdf:type owl:ObjectProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)" ;
  rdfs:comment "At least one point of object region lies in subject region,  and no point of object region lies in the exterior of subject region, or every point of object region is a point of (the interior or boundary of) subject region."@en ;
  rdfs:comment "The interior of the subject region intersects the interior or the boundary of the object region, and the boundary of the subject region intersects the boundary of the object region."@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:crosses
  rdf:type owl:ObjectProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)" ;
  rdfs:comment "The subject and object spatial regions have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them."@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:dependance
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:dependsOn
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:subPropertyOf :dependance ;
  owl:inverseOf :hasDependent ;
.
:determination
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:determinedBy
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Link from a particular to an event that defines that particular. Recommented practice is for target to be a class inherioting from Dolce Utralight (dul:) Event, e.g. sosa:Observation, or prov:Activity"@en ;
  rdfs:subPropertyOf :determination ;
  owl:inverseOf :determines ;
.
:determines
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Property that links a specific value of a fuzzy concept to the generic class representing that concept. E.g. a specific Geologic_Time_Interval (Jusassic in the 2017 ICS time scale) to the generic class representing all opinions about that interval. Source and target must be in the transitive closure of the same root class."@en ;
  rdfs:subPropertyOf :determination ;
.
:emerges
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:domain :Feature ;
  rdfs:range :Relator ;
  rdfs:subPropertyOf :hasDependent ;
  owl:inverseOf :emergesFrom ;
.
:emergesFrom
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:domain :Relator ;
  rdfs:range :Feature ;
  rdfs:subPropertyOf :externallySpecDependsOn ;
.
:exemplification
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:exemplifies
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :exemplification ;
  owl:inverseOf :isExemplifiedBy ;
.
:externallyGenDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :genericallyDependsOn ;
.
:externallySpecDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :externallyGenDependsOn ;
  rdfs:subPropertyOf :specificallyDependsOn ;
.
:genericallyDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "generic  dependence" ;
  rdfs:subPropertyOf :dependsOn ;
.
:hasAnnotation
  rdf:type owl:AnnotationProperty ;
  rdfs:subPropertyOf :isRelatedTo ;
.
:hasConstituent
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "anchoring entity for a Feature"@en ;
  rdfs:comment "leave domain and range unconstrained; would need to add more of the high level ontologic entities (Physical Endurant, Perdurant) to specify here."@en ;
  rdfs:subPropertyOf :hasPersistentPart ;
  owl:inverseOf :isConstituentOf ;
.
:hasDataValue
  rdf:type owl:AsymmetricProperty ;
  rdf:type owl:DatatypeProperty ;
  rdf:type owl:IrreflexiveProperty ;
  rdfs:comment "value could be a number or string or other simple data type-- xsd:SimpleType"@en ;
  rdfs:domain :Measure_Value ;
  rdfs:range xsd:anySimpleType ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:hasDate
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "numeric value for a time coordinate. Associated hasUOM property asserts the units of measure; the temporal reference system used to assert dates should be explained in metadata for the data instances."@en ;
  rdfs:subPropertyOf :hasDataValue ;
.
:hasDependent
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:subPropertyOf :dependance ;
.
:hasEndValue
  rdf:type owl:ObjectProperty ;
  rdfs:comment "property that assigns the upper bound quantifier to a Quality value range"@en ;
  rdfs:domain :Range_Value ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Measure_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Named_Value ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:subPropertyOf :hasStaticPart ;
.
:hasEssentialPart
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The whole is dependent on this part"@en ;
  rdfs:subPropertyOf :genericallyDependsOn ;
  rdfs:subPropertyOf :hasPart ;
  owl:propertyDisjointWith :externallyGenDependsOn ;
.
:hasExample
  rdf:type owl:ObjectProperty ;
  rdfs:comment "An entity is an example of some thing. The example is specifically dependent on the thing. exemplifies(x,y) <--> exists z [hasRole (x,z) ^ Exemplar (z) ^ hasRoleObject(z,y)]"@en ;
  rdfs:range :Example ;
  rdfs:subPropertyOf :isRoleObjectFor ;
  owl:inverseOf :isExampleOf ;
.
:hasInherant
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:range :Inherant ;
  rdfs:subPropertyOf :hasDependent ;
  owl:inverseOf :inheresIn ;
.
:hasInput
  rdf:type owl:ObjectProperty ;
  rdfs:comment "A participant in a process that must be present before the process can operate "@en ;
  rdfs:subPropertyOf :hasParticipant ;
  owl:inverseOf :isInputOf ;
.
:hasOlderHost
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :hostedBy ;
  rdfs:subPropertyOf :timeYoungerThan ;
.
:hasOutput
  rdf:type owl:ObjectProperty ;
  rdfs:comment "A participant in a process that is produced by the action of the process and is present when the process is complete "@en ;
  rdfs:subPropertyOf :hasParticipant ;
  owl:inverseOf :isOutputOf ;
.
:hasPart
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :parthood ;
  owl:inverseOf :isPartOf ;
.
:hasParticipant
  rdf:type owl:ObjectProperty ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Event ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Process ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:range :Endurant ;
  rdfs:subPropertyOf :externallyGenDependsOn ;
  owl:inverseOf :isParticipantIn ;
.
:hasPersistentPart
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "The essential part must be present at all times the whole is present, but the part can be exchanged. Persistent parthood varies by type of whole: for endurant wholes, the endurant part must be present at all times the whole is present, but can live before and after the whole; for perdurant wholes, the part must be present at some past or present time the whole is present (for it to be a persisstent part it must have already happened within the timeline of the whole, and once happended it forever remains a part, so persists); for situations, the part must be present at all times the whole is present and must be equal in duration to the whole (because the duration of the whole is the aggregate of the lifetime of its parts, so a persistent part must be the longest part and determine the duration of the whole). These variations are  not represented currently in GSO, though could be as subproperties of hasPersistentPart, or as rules."@en ;
  rdfs:subPropertyOf :hasEssentialPart ;
  rdfs:subPropertyOf :timeIncludes ;
  owl:inverseOf :isPersistentPartOf ;
.
:hasQuality
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""@en ;
  rdfs:range :Quality ;
  rdfs:subPropertyOf :hasInherant ;
  owl:inverseOf :isQualityOf ;
.
:hasReferenceSystem
  rdf:type owl:AsymmetricProperty ;
  rdf:type owl:ObjectProperty ;
  rdfs:comment "relation that associates a reference system with a quality"@en ;
  rdfs:domain :Quality_Value ;
  rdfs:range :Reference_System ;
  rdfs:subPropertyOf :reference ;
  owl:inverseOf :isReferenceSystemFor ;
  owl:propertyDisjointWith :isReferenceSystemFor ;
.
:hasRole
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:range :Role ;
  rdfs:subPropertyOf :hasInherant ;
  owl:inverseOf :hasRolePlayer ;
.
:hasRoleObject
  rdf:type owl:ObjectProperty ;
  rdfs:comment "property that links a Role to the Particular that the RolePlayer is linked to in a relationship"@en ;
  rdfs:domain :Role ;
  rdfs:subPropertyOf :specificallyDependsOn ;
.
:hasRolePlayer
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:domain :Role ;
  rdfs:subPropertyOf :inheresIn ;
.
:hasSample
  rdf:type owl:ObjectProperty ;
  rdfs:range :Example ;
  rdfs:subPropertyOf :isRoleObjectFor ;
.
:hasSetting
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""@en ;
  rdfs:range :Setting ;
  rdfs:subPropertyOf :isEssentialPartOf ;
  owl:inverseOf :isSettingFor ;
.
:hasSpatialValue
  rdf:type owl:ObjectProperty ;
  rdfs:comment "relation between a non-abstact particular and a spatial location value" ;
  rdfs:label "spatial location value "@en ;
  rdfs:range :Spatial_Value ;
  rdfs:subPropertyOf :location ;
.
:hasStartValue
  rdf:type owl:ObjectProperty ;
  rdfs:comment "property that assigns the lower bound quantifier to a Quality value range"@en ;
  rdfs:domain :Range_Value ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Measure_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Named_Value ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:subPropertyOf :hasStaticPart ;
.
:hasStaticPart
  rdf:type owl:ObjectProperty ;
  rdfs:comment "The specifc individual must always be co-present with whole, cannot be exchanged, and whole is specifically dependent on it"@en ;
  rdfs:subPropertyOf :hasPersistentPart ;
  rdfs:subPropertyOf :specificallyDependsOn ;
  owl:inverseOf :isStaticPartOf ;
.
:hasUOM
  rdf:type owl:ObjectProperty ;
  rdfs:comment "top level property for assigning property values; subtype for associating values with measurement units "@en ;
  rdfs:domain :Measure_Value ;
  rdfs:range :Unit_Of_Measure_Value ;
  rdfs:subPropertyOf :hasQuality ;
.
:hasValue
  rdf:type owl:ObjectProperty ;
  rdfs:comment "top level property for assigning property values; subtype for particular kinds of values (integer, category, number boolean...) "@en ;
  rdfs:domain :Quality ;
  rdfs:range :Quality_Value ;
  rdfs:subPropertyOf :hasPersistentPart ;
  owl:inverseOf :isValueOf ;
.
:hasYoungerHost
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "for a feature that is hosted by multiple entities, e.g. a contact, specify the younger hosting entity."@en ;
  rdfs:subPropertyOf :hostedBy ;
  rdfs:subPropertyOf :timeOlderThan ;
.
:hostedBy
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:domain :Feature ;
  rdfs:subPropertyOf :genericallyDependsOn ;
  owl:inverseOf :hosts ;
.
:hosts
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment ""@en ;
  rdfs:range :Feature ;
  rdfs:subPropertyOf :hasDependent ;
.
:inheresIn
  rdf:type owl:FunctionalProperty ;
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:domain :Inherant ;
  rdfs:subPropertyOf :constantlySpecDependsOn ;
.
:isConstituentOf
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :isPersistentPartOf ;
.
:isEssentialPartOf
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :hasDependent ;
  rdfs:subPropertyOf :isPartOf ;
.
:isExampleOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "relation to a significant example of the domain. Can point to a complete example or representative part"@en ;
  rdfs:domain :Example ;
  rdfs:subPropertyOf :hasRoleObject ;
.
:isExemplifiedBy
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :exemplification ;
.
:isFundamentallyRelatedTo
  rdf:type rdf:Property ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "relationships between Endurant, Perdurants, or Physical_Settings"@en ;
  rdfs:subPropertyOf :isRelatedTo ;
.
:isInputOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "relation from Endurant to Perdurant event or process for which the endurant is a precursor"@en ;
  rdfs:subPropertyOf :isParticipantIn ;
.
:isOutputOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "relation from Endurant to Perdurant event or process for which the endurant is a result"@en ;
  rdfs:subPropertyOf :isParticipantIn ;
.
:isPartOf
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :parthood ;
.
:isParticipantIn
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Endurant ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Event ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Process ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:subPropertyOf :hasDependent ;
.
:isPersistentPartOf
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :isEssentialPartOf ;
.
:isProducedFrom
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:label "produced from "@en ;
  rdfs:subPropertyOf :production ;
  owl:inverseOf :isProductionInput ;
  owl:propertyDisjointWith :isProductionInput ;
.
:isProductionInput
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:label "production input "@en ;
  rdfs:subPropertyOf :production ;
  owl:inverseOf :isProducedFrom ;
  owl:propertyDisjointWith :isProducedFrom ;
.
:isQualityOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "OWL ObjectProperty that binds a Property to some other Particular in which that property inheres."@en ;
  rdfs:comment "link from physical property to a class that exhibits the property"@en ;
  rdfs:domain :Quality ;
  rdfs:subPropertyOf :inheresIn ;
.
:isReferenceSystemFor
  rdf:type owl:AsymmetricProperty ;
  rdf:type owl:ObjectProperty ;
  rdfs:comment "relation linking a referene system to a quality, invers of hasReferenceSystem" ;
  rdfs:domain :Reference_System ;
  rdfs:range :Quality_Value ;
  rdfs:subPropertyOf :reference ;
  owl:inverseOf :hasReferenceSystem ;
  owl:propertyDisjointWith :hasReferenceSystem ;
.
:isRelatedTo
  rdf:type rdf:Property ;
  rdfs:comment "high level category for associations/relationships between particulars other than property bindings"@en ;
.
:isRoleObjectFor
  rdf:type owl:ObjectProperty ;
  rdfs:range :Role ;
  rdfs:subPropertyOf :hasDependent ;
.
:isSampleOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "" ;
  rdfs:domain :Sample ;
  rdfs:subPropertyOf :hasRoleObject ;
.
:isSettingFor
  rdf:type owl:ObjectProperty ;
  rdfs:comment ""@en ;
  rdfs:domain :Setting ;
  rdfs:subPropertyOf :hasEssentialPart ;
.
:isSpatiallyRelatedTo
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf :Notional_Endurant ;
    ] ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:complementOf :Notional_Endurant ;
    ] ;
  rdfs:subPropertyOf :isRelatedTo ;
.
:isStaticPartOf
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :isPersistentPartOf ;
.
:isTemporallyRelatedTo
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "Temporal relationships occurr between things that directly or indirectly occupy temporal regions - the relation is actually between the regions beiong occupied, but the domain and range are the occupying entities"@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf :Abstract_Endurant ;
    ] ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:complementOf :Abstract_Endurant ;
    ] ;
  rdfs:subPropertyOf :isRelatedTo ;
.
:isValueOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "property that binds a Quality Value to a Quality"@en ;
  rdfs:domain :Quality_Value ;
  rdfs:range :Quality ;
  rdfs:subPropertyOf :constantlySpecDependsOn ;
  rdfs:subPropertyOf :isPersistentPartOf ;
.
:location
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "relation between a non-abstact particular and a spatial or temporal location value"@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf :Abstract_Endurant ;
    ] ;
  rdfs:label "location "@en ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Spatial_Value ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Temporal_Value ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:subPropertyOf :constantlyGenDependsOn ;
.
:materiallyDependsOn
  rdf:type owl:ObjectProperty ;
  rdfs:comment "materially depends on - loss or change in the dependee will cause an unaviodable material change in the dependent"@en ;
  rdfs:domain :Physical_Endurant ;
  rdfs:range :Physical_Endurant ;
  rdfs:subPropertyOf :constantlySpecDependsOn ;
  rdfs:subPropertyOf :dependsOn ;
.
:mutuallySpecDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "Mutual specific dependence: the relata specifically depend on each other"@en ;
  rdfs:subPropertyOf :specificallyDependsOn ;
.
:nextTimeInterval
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Source TimeInterval ends at the beginning of the target TimeInterval; there is no intervening time; inverse of age_met_by"@en ;
  rdfs:domain :Time_Interval ;
  rdfs:range :Time_Interval ;
  rdfs:subPropertyOf :timeMeets ;
.
:occupiedBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Spatial_Region ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Time_Region ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:subPropertyOf :hasDependent ;
  owl:inverseOf :occupies ;
.
:occupies
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Occupation of a region of space or time, directly or indirectly"@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf :Abstract_Endurant ;
    ] ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Spatial_Region ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Time_Region ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:subPropertyOf :constantlyGenDependsOn ;
.
:occupiesSpace
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Occupation of a region of space, directly or indirectly"@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Notional_Endurant ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Spatial_Region ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
  rdfs:range :Spatial_Region ;
  rdfs:subPropertyOf :occupies ;
  owl:inverseOf :spaceOccupiedBy ;
.
:occupiesSpaceDirectly
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "The occupation of a spatial region by a material endurant."@en ;
  rdfs:domain :Material_Endurant ;
  rdfs:range :Spatial_Region ;
  rdfs:subPropertyOf :occupiesSpace ;
  owl:inverseOf :spaceOccupiedDirectlyBy ;
  owl:propertyDisjointWith :occupiesSpaceIndirectly ;
.
:occupiesSpaceIndirectly
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Occupies space only by virtue of being ontologically dependent on a physical endurant, or having physical endurant parts, but not being a physical endurant.  Valid domains include situations, features, perdurants, or non-physical endurants."@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf :Physical_Endurant ;
    ] ;
  rdfs:range :Spatial_Region ;
  rdfs:subPropertyOf :occupiesSpace ;
  owl:inverseOf :spaceOccupiedIndirectlyBy ;
.
:occupiesTime
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Occupation of a region of time, directly or indirectly"@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf [
          rdf:type owl:Class ;
          owl:unionOf [
              rdf:type rdf:List ;
              rdf:first :Abstract_Endurant ;
              rdf:rest [
                  rdf:type rdf:List ;
                  rdf:first :Time_Region ;
                  rdf:rest () ;
                ] ;
            ] ;
        ] ;
    ] ;
  rdfs:range :Time_Region ;
  rdfs:subPropertyOf :occupies ;
  owl:inverseOf :timeOccupiedBy ;
.
:occupiesTimeDirectly
  rdf:type owl:FunctionalProperty ;
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "The occupation of a time region by a process or event."@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf [
          rdf:type rdf:List ;
          rdf:first :Event ;
          rdf:rest [
              rdf:type rdf:List ;
              rdf:first :Process ;
              rdf:rest () ;
            ] ;
        ] ;
    ] ;
  rdfs:range :Time_Region ;
  rdfs:subPropertyOf :occupiesTime ;
  owl:inverseOf :timeOccupiedDirectlyBy ;
.
:occupiesTimeIndirectly
  rdf:type owl:FunctionalProperty ;
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Occupies a temporal region only by virtue of being ontologically dependent on a perdurant, or having perdurant parts, but not being a perdurant.  Valid domains include endurants, situations, features."@en ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:complementOf :Perdurant ;
    ] ;
  rdfs:range :Time_Region ;
  rdfs:subPropertyOf :occupiesTime ;
  owl:inverseOf :timeOccupiedIndirectlyBy ;
.
:ontology
  rdf:type owl:Ontology ;
  rdfs:comment "Unary predicates are represented by classes, binary predicates by object properties"@en ;
  rdfs:comment "ontology of shared objectProperties and high level classes used to define geologic features"@en ;
  rdfs:label "Shared elements for geoscience ontology"@en ;
.
:parthood
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:partialEnvelope
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Proposed for 'wraps around'" ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:previousTimeInterval
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Source TimeInterval starts at the end of the target TimeInterval; there is no intervening time; inverse of meets"@en ;
  rdfs:domain :Time_Interval ;
  rdfs:range :Time_Interval ;
  rdfs:subPropertyOf :timeMetBy ;
.
:production
  rdf:type owl:IrreflexiveProperty ;
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "" ;
  rdfs:label "Production "@en ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:reference
  rdf:type owl:IrreflexiveProperty ;
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isFundamentallyRelatedTo ;
.
:spaceOccupiedBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Spatial_Region ;
  rdfs:subPropertyOf :occupiedBy ;
.
:spaceOccupiedDirectlyBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Spatial_Region ;
  rdfs:subPropertyOf :spaceOccupiedBy ;
.
:spaceOccupiedIndirectlyBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Spatial_Region ;
  rdfs:subPropertyOf :spaceOccupiedBy ;
.
:spatialOverlaps
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "The subject and object spatial regions have some but not all points in common, they have the same dimension, and the intersection of the interiors of the two geometries has the same dimension as the geometries themselves"@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:spatiallyDisjoint
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:spatiallyEquals
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)" ;
  rdfs:comment "a and b are topologically equal. Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other"@en ;
  rdfs:comment "the boundary of the subject intersects only the boundary of the object spatial region, and the interior of the subject intersects only the interior of the obect spatial region."@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:spatiallyTouches
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  dct:source "https://en.wikipedia.org/wiki/DE-9IM, from Clementini and others(1993, 1994) based on the seminal works of Egenhofer and others (1990, 1991)" ;
  rdfs:comment "skos:altLabel--  spatially meet"@en ;
  rdfs:comment "subject and object regions have at least one point in common, but their interiors do not intersect."@en ;
  rdfs:comment "the boundary  and only the boundary of the subect intersects the boundary of the object spatial region"@en ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
.
:spatio-temporallyDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "Dependence of an entity on another, requiring certain space-relations between the entities"@en ;
  rdfs:subPropertyOf :externallySpecDependsOn ;
  rdfs:subPropertyOf :isSpatiallyRelatedTo ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
.
:specificallyDependsOn
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "specific dependence" ;
  rdfs:subPropertyOf :genericallyDependsOn ;
.
:staticHostedBy
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :hostedBy ;
  rdfs:subPropertyOf :specificallyDependsOn ;
.
:staticHosts
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :hosts ;
.
:timeContains
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:comment "target interval is completely within the source interval; source begins before target and ends after target. inverse of During"@en ;
  rdfs:subPropertyOf :timeIncludes ;
  rdfs:subPropertyOf :timeIntersects ;
  owl:inverseOf :timeDuring ;
.
:timeDisjoint
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "the union of Allen Before and After; Age intervals of subject and object do not touch or intersect."@en ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
  owl:propertyDisjointWith :timeOverlappedBy ;
.
:timeDuring
  rdf:type owl:ObjectProperty ;
  rdfs:comment "interval A is entirely contained in interval B; B starts before A and B ends after A. Allen relation."@en ;
  rdfs:subPropertyOf :timeIncludedBy ;
  rdfs:subPropertyOf :timeIntersects ;
.
:timeEquivalentTo
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "A is equivalent to B if they represent expressions of the same Time_Region. Same as Allen A Equals B."@en ;
  rdfs:comment "One of six binary relations between geologic events defined by Burns (1975)"@en ;
  rdfs:subPropertyOf :timeIncludedBy ;
  rdfs:subPropertyOf :timeIncludes ;
  rdfs:subPropertyOf :timeIntersects ;
.
:timeFinishedBy
  rdf:type owl:ObjectProperty ;
  rdfs:comment "source interval begins before target; source and target end simultaneously; inverse of finishes"@en ;
  rdfs:subPropertyOf :timeIncludes ;
  rdfs:subPropertyOf :timeIntersects ;
  owl:inverseOf :timeFinishes ;
.
:timeFinishes
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Target TimeRegion starts before source TimeRegion, and source and target TimeRegion end at the same instant. Allen Relation. Use to assign a younger age boundary for a Time Region (instant or interval)."@en ;
  rdfs:subPropertyOf :timeIncludedBy ;
  rdfs:subPropertyOf :timeIntersects ;
.
:timeIncludedBy
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :timeInclusion ;
  owl:inverseOf :timeIncludes ;
.
:timeIncludes
  rdf:type owl:ObjectProperty ;
  rdf:type owl:TransitiveProperty ;
  rdfs:subPropertyOf :timeInclusion ;
.
:timeInclusion
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
.
:timeIncomparableTo
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:comment "A is incomparable to be if there is not enough information to determine an age relationship"@en ;
  rdfs:comment "One of six binary relations between geologic events defined by Burns (1975)"@en ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
.
:timeIntersects
  rdf:type owl:ObjectProperty ;
  rdf:type owl:SymmetricProperty ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
.
:timeMeets
  rdf:type owl:ObjectProperty ;
  rdfs:comment "A covers B -- A is immediately younger than B (there are no events between A and B) Same as Allen A meets B."@en ;
  rdfs:comment "One of six binary relations between geologic events defined by Burns (1975)"@en ;
  rdfs:comment "Source TimeRegion ends at the beginning of the target TimeRegion; there is no intervening time; inverse of age_met_by"@en ;
  rdfs:subPropertyOf :timeDisjoint ;
  rdfs:subPropertyOf :timeOlderThan ;
  owl:inverseOf :timeMetBy ;
.
:timeMetBy
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Source TimeRegion starts at the end of the target TimeRegion; there is no intervening time; inverse of meets"@en ;
  rdfs:subPropertyOf :timeDisjoint ;
  rdfs:subPropertyOf :timeYoungerThan ;
.
:timeOccupiedBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Time_Region ;
  rdfs:subPropertyOf :occupiedBy ;
.
:timeOccupiedDirectlyBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Time_Region ;
  rdfs:subPropertyOf :timeOccupiedBy ;
.
:timeOccupiedIndirectlyBy
  rdf:type owl:ObjectProperty ;
  rdfs:domain :Time_Region ;
  rdfs:subPropertyOf :timeOccupiedBy ;
.
:timeOlderThan
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Age associated with subject is entirely prior to age associated with object"@en ;
  rdfs:comment "Event A is older than event B if A has occurred prior to B. (Burns, 1975; Mathematical Geology, Vol. 7, No. 4) Equivalent to Allen A Before B."@en ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
  owl:inverseOf :timeYoungerThan ;
.
:timeOverlappedBy
  rdf:type owl:ObjectProperty ;
  dct:source "https://en.wikipedia.org/wiki/Allen%27s_interval_algebra" ;
  rdfs:comment "Target event starts after source event, and target event ends after source event ends."@en ;
  rdfs:subPropertyOf :timeIntersects ;
  rdfs:subPropertyOf :timeYoungerThan ;
  owl:inverseOf :timeOverlaps ;
.
:timeOverlaps
  rdf:type owl:ObjectProperty ;
  rdfs:comment "target interval starts before source interval ends, and target inteval ends after source interval. Allen Relation"@en ;
  rdfs:subPropertyOf :timeIntersects ;
  rdfs:subPropertyOf :timeOlderThan ;
.
:timePrecededBy
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :timeDisjoint ;
  rdfs:subPropertyOf :timeYoungerThan ;
  owl:inverseOf :timePrecedes ;
.
:timePrecedes
  rdf:type owl:ObjectProperty ;
  rdfs:subPropertyOf :timeDisjoint ;
  rdfs:subPropertyOf :timeOlderThan ;
.
:timeStartedBy
  rdf:type owl:ObjectProperty ;
  rdfs:comment "source and target start simultaneously; source interval ends after target; inverse of starts"@en ;
  rdfs:subPropertyOf :timeIncludes ;
  rdfs:subPropertyOf :timeIntersects ;
  owl:inverseOf :timeStarts ;
.
:timeStarts
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Source and target TimeRegions start at same instant, target TimeRegion ends after source TimeRegion; Allen Relation. Assign an older age boundary for a time interval."@en ;
  rdfs:subPropertyOf :timeIncludedBy ;
  rdfs:subPropertyOf :timeIntersects ;
.
:timeYoungerThan
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Age associated with subject is entirely after the age associated with object"@en ;
  rdfs:comment "Event A is younger than event B if A has occurred after  B.  Same as Allen A After B.  (Burns, 1975; Mathematical Geology, Vol. 7, No. 4)"@en ;
  rdfs:subPropertyOf :isTemporallyRelatedTo ;
.
rdfs:comment
  rdfs:subPropertyOf :hasAnnotation ;
.
rdfs:label
  rdfs:subPropertyOf :hasAnnotation ;
.
rdfs:seeAlso
  rdfs:subPropertyOf :hasAnnotation ;
.
xsd:anySimpleType
  rdf:type rdfs:Datatype ;
.
xsd:date
  rdf:type rdfs:Datatype ;
.
owl:versionInfo
  rdfs:subPropertyOf :hasAnnotation ;
.
[
  rdf:type owl:AllDisjointProperties ;
  owl:members [
      rdf:type rdf:List ;
      rdf:first :occupiesTime ;
      rdf:rest () ;
    ] ;
].
